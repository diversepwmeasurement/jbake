jobs:
  earlyaccess:
    if: github.repository == 'jbake-org/jbake'
    name: EarlyAccess
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties')
          }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradlew') }}
        path: ~/.gradle/wrapper
        restore-keys: '${{ runner.os }}-gradlew-

          '
    - continue-on-error: true
      name: Build
      run: ./gradlew build -S
    - continue-on-error: true
      env:
        JRELEASER_GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
        JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
      name: Release
      run: ./gradlew jreleaserRelease -S
    - continue-on-error: true
      if: always()
      name: JReleaser output
      uses: actions/upload-artifact@v2
      with:
        name: jreleaser-logs
        path: 'jbake-dist/build/jreleaser/trace.log

          jbake-dist/build/jreleaser/output.properties

          '
name: EarlyAccess
on:
  repository_dispatch:
    types: trigger-ga___early-access.yml
